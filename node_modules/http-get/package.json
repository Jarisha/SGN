{
  "name": "http-get",
  "version": "0.5.9",
  "main": "./lib/http-get.js",
  "description": "Simple to use node.js HTTP / HTTPS client for downloading remote files. Supports transparent gzip / deflate decoding.",
  "dependencies": {
    "semver": ">=1.0.13",
    "buffer-concat": ">=0.0.1"
  },
  "engines": {
    "node": ">=0.6.11"
  },
  "homepage": "https://github.com/SaltwaterC/http-get",
  "author": {
    "name": "Stefan Rusu",
    "url": "http://www.saltwaterc.eu/"
  },
  "contributors": [
    {
      "name": "cmtt",
      "url": "https://github.com/cmtt"
    },
    {
      "name": "elarcent",
      "url": "https://github.com/elarcent"
    },
    {
      "name": "Gil Pedersen",
      "url": "https://github.com/kanongil"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/SaltwaterC/http-get.git"
  },
  "keywords": [
    "http",
    "https",
    "get",
    "head",
    "download",
    "gzip",
    "deflate"
  ],
  "scripts": {
    "test": "make test"
  },
  "readme": "## About [![build status](https://secure.travis-ci.org/SaltwaterC/http-get.png?branch=master)](http://travis-ci.org/SaltwaterC/http-get) ![still maintained](http://stillmaintained.com/SaltwaterC/http-get.png)\n\nSimple to use node.js HTTP / HTTPS client for fetching remote resources. Supports transparent gzip / deflate decoding.\n\nThe client sends GET requests for fetching the remote objects. You may send HEAD requests if you just need to check the availability of a remote resource. The error reporting is implemented with care. The module itself is used in production for background data processing of thousands of remote resources, therefore it is not your average HTTP / HTTPS node.js client. It is in use for both of the transfer modes: buffered responses or streamed to the disk responses. Most of the decisions that made their way into the http-get are based onto the experience of working with a large URL database where a lot of things can go wrong.\n\n## Installation\n\nEither manually clone this repository into your node_modules directory, or the recommended method:\n\n> npm install http-get\n\n## Usage mode\n\n * The [GET method](https://github.com/SaltwaterC/http-get/wiki/GET-method)\n * The [HEAD method](https://github.com/SaltwaterC/http-get/wiki/HEAD-method)\n * [HTTP module internals](https://github.com/SaltwaterC/http-get/wiki/HTTP-module-internals)\n\n## System Requirements\n\n * [node.js](http://nodejs.org/) v0.6.11+ for general usage. Previous versions are broken. Invalid domain names hang the event loop [#2688](https://github.com/joyent/node/pull/2688).\n * node.js v0.6.18+ with zlib bindings for using the transparent gzip / deflate decompression. Previous versions are broken. They don't have proper error reporting [#3230](https://github.com/joyent/node/issues/3230). node.js v0.6.11 - v0.6.17 may be used, but options.noCompress is forced as true.\n * node.js v0.8.5+ for actually using the mandatory SSL validation. Implemented in v0.8.4, but it is broken in that version. Therefore, http-get fails for HTTPS under v0.8.4. Before that, the custom agent does no validation at all, even though the client does not fail.\n\nThis library is not recommended under node.js v0.6.17 due to [this issue](https://groups.google.com/forum/#!topic/nodejs/6euYfwMmx1Y).\n\nnode.js v0.4 is **NOT** supported due to lack of zlib bindings. node.js v0.4 is only supported by the http-get v0.3 versions.\n\n## Contributors\n\n * [cmtt](https://github.com/cmtt) - options.timeout, fixed the broken handling of buffered response when retrying the request with options.nocompress\n * [elarcent](https://github.com/elarcent) - HTTP Basic auth fix\n * [Gil Pedersen](https://github.com/kanongil) - Fixed the stream handling\n",
  "_id": "http-get@0.5.9",
  "dist": {
    "shasum": "0c4c740235733a2a31b0f2d82109b3b98c417276"
  },
  "_from": "http-get"
}
