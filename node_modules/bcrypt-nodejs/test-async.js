var bCrypt = require("./bCrypt");

console.log("\n\n Salts \n");

var salt1 = bCrypt.genSaltSync(8);
console.log(salt1);

var salt2 = bCrypt.genSaltSync(10);
console.log(salt2);

function saltCallback(error, result) {
	
}


console.log("\n\n Hashes \n");

var hashes = [];
int hashed = 0;

function createHash(salt) {
	bCrypt.hash("bacon", salt, null, hashCallback);
	bCrypt.hash("bacon", salt, null, hashCallback);
}

createHash(salt1);

function hashCallback(error, result) {
	if(!error) {
		console.log(result);
	} else {
		console.log(error);
	}
	hashes[hashed++] = result;
	if(hashed == 4) {
		startCompare();
	}
}

console.log("\n\n True Compares \n");

console.log(bCrypt.compareSync("super secret", hash1));
console.log(bCrypt.compareSync("super secret", hash2));
console.log(bCrypt.compareSync("super secret", hash3));
console.log(bCrypt.compareSync("super secret", hash4));
console.log(bCrypt.compareSync("super secret", hash5));
console.log(bCrypt.compareSync("super secret", hash6));
console.log(bCrypt.compareSync("super secret", hash7));
console.log(bCrypt.compareSync("super secret", hash8));
console.log(bCrypt.compareSync("super secret", hash9));
console.log(bCrypt.compareSync("super secret", hash0));

console.log("\n\n False Compares \n");

console.log(bCrypt.compareSync("supersecret", hash1));
console.log(bCrypt.compareSync("supersecret", hash2));
console.log(bCrypt.compareSync("supersecret", hash3));
console.log(bCrypt.compareSync("supersecret", hash4));
console.log(bCrypt.compareSync("supersecret", hash5));
console.log(bCrypt.compareSync("supersecret", hash6));
console.log(bCrypt.compareSync("supersecret", hash7));
console.log(bCrypt.compareSync("supersecret", hash8));
console.log(bCrypt.compareSync("supersecret", hash9));
console.log(bCrypt.compareSync("supersecret", hash0));