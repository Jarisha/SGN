{
  "name": "supergoose",
  "description": "Mongoose plugin for simple addons like findOrCreate",
  "version": "0.0.8",
  "author": {
    "name": "Matt Roman",
    "email": "romanmt@gmail.com"
  },
  "keywords": [
    "supergoose",
    "mongodb",
    "mongoose",
    "plugin",
    "findOrCreate"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jamplify/supergoose"
  },
  "dependencies": {
    "mongoose": ">= 2.6.5",
    "underscore": ">= 1.3.3",
    "underscore.string": ">= 2.2.0rc"
  },
  "devDependencies": {
    "should": ">= 0.2.1",
    "mocha": ">= 0.13.0"
  },
  "scripts": {
    "test": "mocha -u bdd -R spec -c ./test/*test.js"
  },
  "license": "MIT",
  "engine": {
    "node": ">= 0.6"
  },
  "readme": "supergoose\n==================\n\n[Mongoose](https://github.com/LearnBoost/mongoose) simple plugin adding some \nhandy functions. \n\n```javasript\n/* Adds find or create functionality to mongoose models. This is handy\n * for libraries like passport.js which require it\n */\nModel.findOrCreate()\n\n/* Parses the complex validation errors return from mongoose into a simple\n * array of messages to be displayed as flash messages or something similar\n */\nModel.errors()\n```\n\nInstallation\n------------\n\n`npm install supergoose`\n\nUsage\n-----\n\n# findOrCreate\n\n```javascript\nvar supergoose = require('supergoose')\nvar ClickSchema = new Schema({ ... });\nClick.plugin(supergoose);\nvar Click = mongoose.model('Click', ClickSchema);\n```\n\nThe Click model now has a findOrCreate static method\n\n```javascript\nClick.findOrCreate({ip: '127.0.0.1'}, function(err, click) {\n  console.log('A new click from \"%s\" was inserted', click.ip);\n  Click.findOrCreate({}, function(err, click) {\n    console.log('Did not create a new click for \"%s\"', click.ip);\n  })\n});\n```\n\nYou can also include properties that aren't used in the \nfind call, but will be added to the object if it is created.\n\n```javascript\nClick.create({ip: '127.0.0.1'}, {browser: 'Mozilla'}, function(err, val) {\n  Click.findOrCreate({ip: '127.0.0.1'}, {browser: 'Chrome'}, function(err, click) {\n    console.log('A click from \"%s\" using \"%s\" was found', click.ip, click.browser);\n    // prints A click from \"127.0.0.1\" using \"Mozilla\" was found\n  })\n});\n```\n\n# errors\n```javascript\nvar supergoose = require('supergoose')\nvar ClickSchema = new Schema({ip: {type: String, required: true}});\nClick.plugin(supergoose, {messages: {'required': '%s is a required field'}});\nvar Click = mongoose.model('Click', ClickSchema);\n```\n\nThe Click model now has an errors static method\n\n```javascript\nClick.create({}, function(err, click) {\n  if(err) {\n    Click.errors(err, function(messages) {\n      console.log(messages);\n      // outputs ['ip is a required field']\n    }) \n  }\n});\n```\n      \nLicense\n-------\n\nMIT License\n",
  "_id": "supergoose@0.0.8",
  "dist": {
    "shasum": "45c1a580f527be6a0d2f2f7fd3b20facaf6bbe4d"
  },
  "_from": "supergoose"
}
